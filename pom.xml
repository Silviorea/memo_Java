<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>0_MEMO_COURS</groupId>
	<artifactId>0_MEMO_COURS</artifactId>
	<packaging>war</packaging>
	<version>1.0.23-SNAPSHOT</version>
	<name>Java avancé en POE !</name>
	<description>Un projet vraiment très très bien !</description>
	<properties>
		
		<!-- Ici sont définies des properties (variables) utilisables par Maven ou 
		ses plugins -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	
	
		<!-- JaCoCo Properties -->
		<jacoco.version>0.8.6</jacoco.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.language>java</sonar.language>
	</properties>
	<build>
		<!-- Ici sont définis les plugins : les différentes 'petites mains' de Maven 
		et leur configuration. Chaque plugin offre différentes possibilités -->
		<plugins>
			<plugin>
				<!-- Ce plugin de base sert à compiler du code (Java par défaut) -->
				<!-- Ici on le configure pour forcer la version du code source et 
				la version du code cible -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Ce plugin de base sert faire des releases : versions livrables 
				et dont le contenu ne change pas -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<releaseProfiles>release</releaseProfiles>
				</configuration>
			</plugin>
			<plugin>
				<!-- Ce plugin de base sert à déployer les versions, 
				sur un référentiel Maven -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.2</version>
				<configuration>
					<useCache>false</useCache>
				</configuration>
			</plugin>
			<plugin>
				<!-- Ce plugin fourni par Sonatype sert à 
				avoir des indicateurs sur la qualité de code, via
				un serveur SonarQube -->
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.13</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<serverId>nexus-local-snapshot</serverId>
					<nexusUrl>http://localhost:8081/</nexusUrl>
					<skipStaging>true</skipStaging>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<!-- Un profile est un profil d'éxécution. Il sert à paramétrer des modules
		d'une façon ou d'une autre : exemple : livraison d'une version SNAPSHOT, ou livraison 
		d'une version de production -->
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.13</version>
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>default-deploy</id>
								<phase>deploy</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<serverId>nexus-local-release</serverId>
							<nexusUrl>http://localhost:8081/</nexusUrl>
							<skipStaging>true</skipStaging>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<dependencies>
		<!-- Ici sont référencées toutes les dépendances dont a besoin votre projet pour fonctionner -->
		<!-- les logs -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>
		<!-- La couverture de tests -->
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.6</version>
		</dependency>
		<!-- Cette dépendance est provided : nous en avons besoin pour la compilation.
			En effet, nous faisons parfois référence à la classe HttpServlet que cette dépendance
			contient.  
		    Mais au final, ce sera Tomcat qui la fournira en tant que serveur.-->
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-api</artifactId>
			<version>10.0.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- Math Library -->
		<dependency>
			<groupId>org.locationtech.jts</groupId>
			<artifactId>jts-core</artifactId>
			<version>1.18.0</version>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.9.1</version>
			<scope>test</scope>
		</dependency>
		
		
		
		<!-- Embedded database -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>2.1.214</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>10.15.2.0</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.14.2</version>

		</dependency>
		
		
				<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>8.0.32</version>
		</dependency>

		
		
	</dependencies>
</project>


<!--

SKIP TEST : mvn -DskipTests clean install

-->

